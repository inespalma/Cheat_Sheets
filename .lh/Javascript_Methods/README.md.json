{
    "sourceFile": "Javascript_Methods/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1733309435143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1733309435142,
            "name": "Commit-0",
            "content": "# JavaScript Methods\r\n\r\n## **Array Methods**\r\n\r\n| JavaScript Method                                                                                           | Description                                                                     | Example                                 | Example Output               |\r\n| ----------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------- | --------------------------------------- | ---------------------------- |\r\n| [`shift()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift)   | Removes the first element from an array                                         | `[1, 2, 3].shift()`                     | `Output: 1`                  |\r\n| [`push()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push)     | Adds one or more elements to the end of an array                                | `[1, 2, 3].push(4)`                     | `Output: [1, 2, 3, 4]`       |\r\n| [`pop()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop)       | Removes the last element from an array                                          | `[1, 2, 3].pop()`                       | `Output: 3`                  |\r\n| [`splice()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice) | Adds/removes items from an array                                                | `[1, 2, 3].splice(1, 1, 4)`             | `Output: [2]`                |\r\n| [`sort()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort)     | Sorts the elements of an array mutating the original array                      | `[3, 1, 2].sort()`                      | `Output: [1, 2, 3]`          |\r\n| [`toSorted()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) | Sorts the elements of an array without mutating the original array              | `[3, 1, 2].toSorted()`                  | `Output: [1, 2, 3]`          |\r\n| [`filter()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter) | Creates a new array with all elements that pass a test                          | `[1, 2, 3, 4].filter(x => x > 2)`       | `Output: [3, 4]`             |\r\n| [`map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)       | Creates a new array with the results of calling a function for each element     | `[1, 2, 3].map(x => x * 2)`             | `Output: [2, 4, 6]`          |\r\n| [`flatMap()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)   | First applies a function to each element, then flattens the result by one level | `[1, 2, 3].flatMap(x => [x, x * 2])`    | `Output: [1, 2, 2, 4, 3, 6]` |\r\n| [`reduce()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce) | Applies a function against an accumulator and each element                      | `[1, 2, 3].reduce((sum, x) => sum + x)` | `Output: 6`                  |\r\n| [`some()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)   | Tests if at least one element in the array passes the test                      | `[1, 2, 3].some(x => x > 2)\t`            | `Output: true`               |\r\n| [`every()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)  | Tests if every element in the array passes the test                             | `[1, 2, 3].every(x => x > 0)`           | `Output: true`               |\r\n\r\n---\r\n\r\n## **String Methods**\r\n\r\n| JavaScript Method                                                                                                      | Description                                        | Example                            | Example Output                          |\r\n| ---------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------- | ---------------------------------- | --------------------------------------- |\r\n| [`toString()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString)       | Converts a value to a string                       | `(123).toString()`                 | `Output: \"123\"`                         |\r\n| [`toUpperCase()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase) | Converts a string to Uppercase                     | `\"hello\".toUpperCase()`            | `Output: \"HELLO\"`                       |\r\n| [`toLowerCase()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase) | Converts a string to Lowercase                     | `\"HELLO\".toLowerCase()`            | `Output: \"hello\"`                       |\r\n| [`concat()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/concat)           | Combines two or more strings                       | `\"Hello\".concat(\" World!\")`        | `Output: \"Hello World!\"`                |\r\n| [`slice()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice)             | Extracts a section of a string or array            | `\"JavaScript\".slice(0, 4)`         | `Output: \"Java\"`                        |\r\n| [`split()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)             | Splits a string into an array of substrings        | `\"apple,banana,orange\".split(\",\")` | `Output: [\"apple\", \"banana\", \"orange\"]` |\r\n| [`includes()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes)       | Checks if a string contains a specified value      | `\"Hello\".includes(\"e\")`            | `Output: true`                          |\r\n| [`indexOf()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf)         | Returns the first index of a specified value       | `\"JavaScript\".indexOf(\"a\")`        | `Output: 1`                             |\r\n| [`trim()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim)               | Removes whitespace from both ends of a string      | `\"  Hello  \".trim()`               | `Output: \"Hello\"`                       |\r\n| [`padStart()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim)           | Pads the string from the start with another string | `\"5\".padStart(3, \"0\")`             | `Output: \"005\"`                         |\r\n\r\n---\r\n\r\n## **Number Methods**\r\n\r\n| JavaScript Method                                                                                             | Description                                                 | Example                    | Example Output              |\r\n| ------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------- | -------------------------- | --------------------------- |\r\n| [`BigInt()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt)         | Creates a BigInt, a special numeric type for large Integers | `BigInt(9007199254740991)` | `Output: 9007199254740991n` |\r\n| [`Math.floor()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor) | Rounds Down                                                 | `Math.floor(4.7)`          | `Output: 4`                 |\r\n| [`Math.round()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round) | Rounds Up & Down based on decimal                           | `Math.round(4.5)`          | `Output: 5`                 |\r\n| [`Math.ceil()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil)   | Round Up                                                    | `Math.ceil(4.3)`           | `Output: 5`                 |\r\n| [`Math.PI`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/PI)         | Returns the value of Pi                                     | `Math.PI`                  | `Output: 3.141592653589793` |\r\n| [`parseInt()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt)     | Converts a string to an integer                             | `parseInt(\"123px\")`        | `Output: 123`               |\r\n| [`parseFloat()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseFloat) | Converts a string to a floating-point number                | `parseFloat(\"3.14px\")`     | `Output: 3.14`              |\r\n| [`isFinite()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite)     | Determines whether a value is a finite number               | `isFinite(2 / 0)`          | `Output: false`             |\r\n\r\n## **Date Methods**\r\n\r\n| JavaScript Method                                                                                          | Description                                                               | Example                    | Example Output                  |\r\n| ---------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------- | -------------------------- | ------------------------------- |\r\n| [`new Date()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt)    | Creates a new Date object representing the current date and time          | `new Date()`               | `Output: current date and time` |\r\n| [`getTime()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor) | Returns the time in milliseconds since the Unix Epoch                     | `new Date().getTime()`     | `Output: timestamp in ms`       |\r\n| [`getDay()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round)  | Returns the day of the week (0-6) from a Date object                      | `new Date().getDay()`      | `Output: day of the week (0-6)` |\r\n| [`parse()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round)   | Parses a date string into the number of milliseconds since the Unix Epoch | `Date.parse(\"2024-12-04\")` | `Output: 1701676800000`         |\r\n"
        }
    ]
}